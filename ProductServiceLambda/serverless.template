AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Product Service with Lambda, API Gateway, and DynamoDB

Globals:
  Function:
    Runtime: dotnet8
    Timeout: 10
    MemorySize: 256

Resources:
  ProductsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: ProductsTable
      AttributeDefinitions:
        - AttributeName: Id
          AttributeType: S
      KeySchema:
        - AttributeName: Id
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST

  ProductServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: ProductServicePolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:PutItem
                  - dynamodb:GetItem
                  - dynamodb:UpdateItem
                  - dynamodb:DeleteItem
                  - dynamodb:Scan
                Resource: !GetAtt ProductsTable.Arn
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: "*"

  AddProductFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: ProductServiceLambda::ProductServiceLambda.Functions.AddProductFunction::FunctionHandler
      Role: !GetAtt ProductServiceRole.Arn
      Environment:
        Variables:
          PRODUCTS_TABLE: !Ref ProductsTable
      Events:
        AddProductAPI:
          Type: Api
          Properties:
            Path: /product
            Method: post

  GetProductFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: ProductServiceLambda::ProductServiceLambda.Functions.GetProductFunction::FunctionHandler
      Role: !GetAtt ProductServiceRole.Arn
      Environment:
        Variables:
          PRODUCTS_TABLE: !Ref ProductsTable
      Events:
        GetProductAPI:
          Type: Api
          Properties:
            Path: /product/{id}
            Method: get

Outputs:
  ApiGatewayUrl:
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
